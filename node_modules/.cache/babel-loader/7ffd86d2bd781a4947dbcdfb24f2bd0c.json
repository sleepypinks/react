{"ast":null,"code":"var _jsxFileName = \"/Users/ziftikha/Documents/GitHub/ui/react-studio/src/App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport bakeryData from \"./assets/bakery-data.json\";\nimport BakeryItem from \"./components/BakeryItem\";\nimport Cart from \"./components/Cart\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nbakeryData.forEach(item => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n\n  const [cart, setCart] = useState([]);\n  const clickItem = item => {\n    setCart([...cart, {\n      text: item.name,\n      price: item.price,\n      key: Date.now()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Bakery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), bakeryData.map((item, index) => /*#__PURE__*/_jsxDEV(BakeryItem, {\n          item: item,\n          clickItem: clickItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Cart, {\n        cartState: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","bakeryData","BakeryItem","Cart","forEach","item","image","process","env","PUBLIC_URL","App","cart","setCart","clickItem","text","name","price","key","Date","now","map","index"],"sources":["/Users/ziftikha/Documents/GitHub/ui/react-studio/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport bakeryData from \"./assets/bakery-data.json\";\nimport BakeryItem from \"./components/BakeryItem\";\nimport Cart from \"./components/Cart\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nbakeryData.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  \n  const [cart, setCart] = useState([]);\n\n  const clickItem = (item) => {\n    setCart([...cart, { text: item.name, price: item.price, key: Date.now() }]);\n  };\n  \n  return (\n    <div>\n      <div>\n        <div>\n          <h1>My Bakery</h1>\n          {bakeryData.map((item, index) => (\n            <BakeryItem item={item} clickItem={clickItem} />\n            ))}\n        </div>\n          <h2>Cart</h2>\n          <Cart cartState={cart}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AAAA;AACAF,UAAU,CAACG,OAAO,CAAEC,IAAI,IAAK;EAC3BA,IAAI,CAACC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGJ,IAAI,CAACC,KAAK;AACxD,CAAC,CAAC;AACF;;AAEA,SAASI,GAAG,GAAG;EAAA;EACb;EACA;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,SAAS,GAAIR,IAAI,IAAK;IAC1BO,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAAEG,IAAI,EAAET,IAAI,CAACU,IAAI;MAAEC,KAAK,EAAEX,IAAI,CAACW,KAAK;MAAEC,GAAG,EAAEC,IAAI,CAACC,GAAG;IAAG,CAAC,CAAC,CAAC;EAC7E,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,EACjBlB,UAAU,CAACmB,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBAC1B,QAAC,UAAU;UAAC,IAAI,EAAEhB,IAAK;UAAC,SAAS,EAAEQ;QAAU;UAAA;UAAA;UAAA;QAAA,QAC5C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACJ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,IAAI;QAAC,SAAS,EAAEF;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACtB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAxBQD,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}